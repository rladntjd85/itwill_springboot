<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.db.items.mapper.ItemMapper">
	<!-- 상품 전체 목록 조회 - SELECT -->
	<!-- 
	주의! 엔티티 클래스의 필드명(Camel-case)과 데이터베이스 컬럼명(Snake-case)이 서로 일치하지 않을 경우
	데이터 조회 시 조회된 데이터가 엔티티 객체에 바인딩되지 않으므로 대책이 필요하다!
	1) properties 파일에 "mybatis.configuration.map-underscore-to-camel-case=true" 설정 추가  
	   => 조회된 컬럼명에 대한 Snake-case 형태를 Camel-case 형태로 자동 변환
	2) resultMap 태그를 활용하여 조회된 데이터를 별도의 형태로 처리하도록 설정 
	   => 기본적인 이름 변경 기능 외에 별도로 기능 추가(ex. TypeHandler 등록)가 가능
	-->
<!-- 	<select id="findAllItems" resultType="com.itwillbs.db.items.dto.ItemDTO"> -->
<!-- 		SELECT -->
<!-- 			id, -->
<!-- 			item_nm, -->
<!-- 			item_detail, -->
<!-- 			price, -->
<!-- 			stock_qty, -->
<!-- 			reg_time -->
<!-- 		FROM -->
<!-- 			items -->
<!-- 	</select> -->
	
	<!--
	items 테이블과 item_img 테이블간의 1:N 관계에서 items 테이블 조회 시 LEFT JOIN 을 통해 item_img 테이블도 함께 조회
	items 테이블 레코드 1개당 item_img 테이블 레코드가 복수개의 row 로 조회될 수 있음
	따라서, item_img 테이블의 row 들을 List<ItemImgDTO> 타입 객체 형태로 저장될 수 있도록 추가 작업 필요 
	1) <resultMap> 태그 사용하여 리턴될 조회 결과에 대한 데이터 저장 타입을 명시
	2) <resultMap> 태그 내부에서 LEFT JOIN 으로 결합될 대상 테이블(item_img)을 List 형태로 다루기 위해
	   <collection> 태그를 추가로 작성하여 복수개의 row 가 저장될 형태 지정
	-->

	<!-- resultMap 활용하여 결과 데이터를 관리할 별도의 형태를 지정 -->
	<!-- <resultMap type="처리할 데이터의 클래스 타입(resultType 속성에서 사용하는 타입)" id="resultMap 이름(각 태그에서 불러올 이름)"> -->
	<resultMap type="ItemDTO" id="itemDTOResultMap"> <!-- application.properties 파일에 패키지명 생략 설정 시 클래스명만 타입으로 지정 가능 -->
		<!-- 실제 조회되는 데이터에 대한 바인딩을 직접 지정하여 처리 -->
		<!-- PK 컬럼(@Id)만 <id> 태그로 작성하고, 나머지 컬럼은 <result> 태그로 작성 -->
		<!-- property 속성은 엔티티 클래스의 필드명, column 속성은 DB 테이블 컬럼명을 지정 -->
		<id property="id" column="id" />
		<result property="itemNm" column="item_nm" />
		<result property="itemDetail" column="item_detail" />
		<result property="price" column="price" />
		<result property="stockQty" column="stock_qty" />
		<result property="regTime" column="reg_time" />
		
		<!-- 
		LEFT JOIN 을 통해 복수개의 row 로 조회될 대상을 <collection> 태그로 설정 
		<collection 
			property="바깥의 resultMap 에서 지정한 객체에서 파일목록 저장할 필드명" 
			ofType="1개의 row 가 저장될 타입">
		</collection>
		-->
		<collection property="itemImgDTOList" ofType="ItemImgDTO">
			<id property="id" column="item_img_id" />
			<result property="imgLocation" column="img_location" />
			<result property="imgName" column="img_name" />
			<result property="originalImgName" column="original_img_name" />
			<result property="repImgYn" column="rep_img_yn" />
		</collection>
	</resultMap>
	
	<select id="findAllItems" resultMap="itemDTOResultMap">
		SELECT
		    i.id,
		    i.item_nm,
		    i.item_detail,
		    i.price,
		    i.stock_qty,
		    i.reg_time,
		    
		    ii.item_img_id,
		    ii.img_location,
		    ii.img_name,
		    ii.original_img_name,
		    ii.rep_img_yn
		FROM
		    items i
		LEFT JOIN
		    item_img ii
		ON
		    i.id = ii.item_id   
	</select>
	
</mapper>











