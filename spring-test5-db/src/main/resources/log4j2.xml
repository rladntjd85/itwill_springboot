<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
	<!-- 각 로그에서 사용할 속성값을 Properties 태그 내의 Property 태그로 정의 -->
	<Properties>
		<Property name="LOG_DIR">D:/logs/mylog</Property>
		<!-- 아이티윌 서버 상에서 로그 경로 설정 예시 -->
<!-- 		<Property name="LOG_DIR">/usr/local/tomcat/logs/mylog</Property> -->

		<!-- 로그별 출력할 패턴을 정의 -->
<!-- 		<Property name="LAYOUT_PATTERN">%d{yyyy-MM-dd HH:mm:ss} %-5p: [%c] %m%n</Property> -->

		<!-- 패턴에 컬러링 추가 -->
		<!-- 컬러링을 추가할 대상을 %style{} 블록으로 감싸고 해당 블록 뒤에 {컬러} 추가(참고> 컬러값은 ANSI 표준 컬러명 지정) -->
		<Property name="LAYOUT_PATTERN">%d{yyyy-MM-dd HH:mm:ss} %style{%-5p}{RED} %style{[%c]}{CYAN} %m%n</Property>
	</Properties>
	
	<!-- 로그 설정을 수행할 Appenders, 로그 출력 대상을 지정할 Loggers 설정 -->
	<Appenders>
		<!-- 1) Console 태그 사용하여 이클립스 콘솔에 출력할 로그 설정 -->
		<Console name="console" target="SYSTEM_OUT"> <!-- target 속성값 고정 -->
			<!-- 로그 출력 형식 지정 -->
<!-- 			<PatternLayout pattern="%-5p: %c - %m%n" /> -->
<!-- 			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} %-5p: %c - %m%n" /> -->
			<!-- <Property> 태그로 지정한 속성값을 패턴으로 적용 -->
<!-- 			<PatternLayout pattern="${LAYOUT_PATTERN}" /> -->
			<!-- 콘솔 로그에 컬러링을 적용하기 위한 속성 추가 -->
			<PatternLayout pattern="${LAYOUT_PATTERN}" disableAnsi="false" noConsoleNoAnsi="false" />
		</Console>
		
		<!-- 로그 파일 출력 설정 -->
		<!-- RollingFile 태그를 사용하여 로그 파일을 순환식으로 관리 -->
		<!-- 순환 규칙 : 파일 크기 개당 100KB 제한 -->
		<RollingFile name="rollingFile"
					fileName="${LOG_DIR}/mylog.log"
					filePattern="${LOG_DIR}/mylog-%d{yyyy-MM-dd}-%i.log">
			<PatternLayout pattern="${LAYOUT_PATTERN}" />
			<Policies>
				<SizeBasedTriggeringPolicy size="10KB" />
				<TimeBasedTriggeringPolicy />
			</Policies>
			<Filters>
				<!-- 특정 대상 레벨 로그에 대한 필터링 설정 -->
				<!-- ERROR 레벨 이상의 로그는 필터링을 통해 제외시키고, 나머지 로그만 출력 -->
				<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="ACCEPT" />
			</Filters>
		</RollingFile>
		
		<!-- 에러메세지(ERROR 이상)만 별도의 로그 파일로 관리하기 위한 설정 -->
		<RollingFile name="rollingErrorFile"
					fileName="${LOG_DIR}/mylog_error.log"
					filePattern="${LOG_DIR}/mylog_error-%d{yyyy-MM-dd}-%i.log">
			<PatternLayout pattern="${LAYOUT_PATTERN}" />
			<Policies>
				<SizeBasedTriggeringPolicy size="10KB" />
				<TimeBasedTriggeringPolicy />
			</Policies>
			<Filters>
				<!-- 특정 대상 레벨 로그에 대한 필터링 설정 -->
				<!-- ERROR 레벨 이상의 로그는 필터링을 통해 허용하고, 나머지 로그는 제외 -->
				<ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
		</RollingFile>
		
		<RollingFile name="rollingFile2"
					fileName="${LOG_DIR}/mylog_system.log"
					filePattern="${LOG_DIR}/mylog_system-%d{yyyy-MM-dd}-%i.log">
			<PatternLayout pattern="${LAYOUT_PATTERN}" />
			<Policies>
				<SizeBasedTriggeringPolicy size="10KB" />
				<TimeBasedTriggeringPolicy />
			</Policies>
		</RollingFile>
		
	</Appenders>
	
	<!-- Loggers 태그 사용하여 로그를 사용할 대상 지정 -->
	<Loggers>
		<!-- Root 로거 설정 - 기본 출력되는 시스템 로그 담당 -->
		<!-- level 속성 사용하여 출력할 심각도 범위 지정(TRACE < DEBUG < INFO < WARN < ERROR < FATAL) -->
		<!-- level 값을 OFF 설정 시 해당 로그 끄기 -->
		<Root level="INFO"> <!-- INFO 이상의 심각도 레벨의 로그 출력(INFO < WARN < ERROR < FATAL) -->
			<!-- <AppenderRef> 태그 사용하여 설정된 로그 중 출력 대상 지정(ref 속성값으로 Appenders 내의 각 태그 name 속성값 지정) -->
			<AppenderRef ref="console" /> <!-- Root 로거의 INFO 레벨 이상 메세지들을 콘솔에 출력 -->
			<AppenderRef ref="rollingFile2" /> Root 로거 메세지들을 외부 파일에 출력
		</Root>
		
		<!-- 현재 프로젝트(애플리케이션) 내의 특정 패키지에 대한 로그 설정 -->
			<!-- INFO 이상의 심각도 레벨의 로그 출력(INFO < WARN < ERROR < FATAL) -->
		<Logger name="com.itwillbs.db" level="INFO" additivity="false">
			<!-- WARN 이상의 심각도 레벨의 로그 출력(WARN < ERROR < FATAL) -->
<!-- 		<Logger name="com.itwillbs.db" level="WARN" additivity="false"> -->
<!-- 		<Logger name="com.itwillbs.db" level="OFF" additivity="false"> -->
			<AppenderRef ref="console" />
			<AppenderRef ref="rollingFile" /> <!-- Root 로거 메세지들을 외부 파일에 출력 -->
			<AppenderRef ref="rollingErrorFile" /> <!-- Root 로거 메세지 중 오류메세지들을 외부 파일에 출력 -->
		</Logger>
		
		<!-- 하이버네이트 관련 로그 설정 -->
		<Logger name="org.hibernate" level="WARN" additivity="false">
			<AppenderRef ref="console" /> 
			<AppenderRef ref="rollingFile2" /> <!-- Root 로거 메세지들을 외부 파일에 출력 -->
		</Logger>
	</Loggers>
	
</Configuration>


















